USE CasaPopular;

IF (SELECT COUNT(*) FROM Pessoas) = 0
BEGIN
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'M', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
	MERGE Pessoas WITH (HOLDLOCK) AS TARGET USING (VALUES (NEWID(), (SELECT TOP 1 * FROM STRING_SPLIT((SELECT 'NOME ' + CONVERT(varchar(255), NEWID())), '-')), (SELECT 3 + CRYPT_GEN_RANDOM(1) % 80), 'F', (SELECT 50 + CRYPT_GEN_RANDOM(1) * 3), (SELECT TOP 1 Id FROM Familias ORDER BY NEWID()), GETDATE(), 1)) AS SOURCE (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) ON TARGET.Nome = SOURCE.Nome WHEN NOT MATCHED BY TARGET THEN INSERT (Id, Nome, Idade, Sexo, Salario, FamiliaId, CreateAt, IsActive) VALUES (Source.Id, Source.Nome, Source.Idade, Source.Sexo, Source.Salario, Source.FamiliaId, Source.CreateAt, Source.IsActive) WHEN MATCHED THEN UPDATE SET TARGET.Nome = SOURCE.Nome, TARGET.Idade = SOURCE.Idade, TARGET.Sexo = SOURCE.Sexo, TARGET.Salario = SOURCE.Salario, TARGET.FamiliaId = SOURCE.FamiliaId;
END;